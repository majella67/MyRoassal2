"
I am a holder for widgets generated by Shape/Layout/InteractionWidgetBuilders.  I am used when dynamically building widgets
"
Class {
	#name : #ShapePresenterWidget,
	#superclass : #ComposablePresenter,
	#instVars : [
		'aPresenter'
	],
	#category : #'MyRoassal2-Core'
}

{ #category : #specs }
ShapePresenterWidget class >> defaultSpec [
	^ SpecLayout composed newRow:[:row | row add:#aPresenter]; yourself 
]

{ #category : #accessing }
ShapePresenterWidget >> aPresenter [
	^ aPresenter
]

{ #category : #accessing }
ShapePresenterWidget >> aPresenter: anObject [
	aPresenter := anObject
]

{ #category : #initialization }
ShapePresenterWidget >> initializeWidgets [

	aPresenter := self newNullPresenter
]

{ #category : #accessing }
ShapePresenterWidget >> presenter: newPresenter [
 aPresenter := newPresenter
]
